language: python
dist: trusty
services:
  - docker

#cache:
#  directories:
#  - $HOME/ScienceTools

notifications:
  email: false

env:
    global:
      - FERMI_DIR=$HOME/ScienceTools/x86_64-unknown-linux-gnu-libc2.19-10
      - SLAC_ST_BUILD=false      
      - PIP_DEPS='coverage pytest-cov coveralls'
      - CONDA2='conda install -y -c conda-forge healpy wcsaxes'
      - INSTALL_CMD='python setup.py install'

matrix:
    include:

        # The main build:
        # Python 2, Fermi ST, all dependencies
        - os: linux
          env: NAME=main
               PYTHON_VERSION=2.7
               CONDA_DOWNLOAD=Miniconda-latest-Linux-x86_64.sh
               ST_INSTALL='bash stinstall.sh force'
               DOCKER_INSTALL=''
               CONDA_DEPS='scipy matplotlib pytest pyyaml'

        # The Sphinx docs build
        # Python 3, no Fermi ST, all other dependencies
        - os: linux
          env: NAME=docs
               PYTHON_VERSION=3.5
               ST_INSTALL=''
               DOCKER_INSTALL=''
               CONDA_DOWNLOAD=Miniconda3-latest-Linux-x86_64.sh
               CONDA_DEPS='scipy matplotlib pytest pyyaml sphinx sphinx_rtd_theme'

        # Python 3, no Fermi ST, all other dependencies
        - os: linux
          env: NAME=py3_st-no_dep-yes
               PYTHON_VERSION=3.5
               ST_INSTALL=''
               DOCKER_INSTALL=''
               CONDA_DOWNLOAD=Miniconda3-latest-Linux-x86_64.sh
               CONDA_DEPS='scipy matplotlib pytest pyyaml'

        # Python 2, no Fermi ST, all other dependencies
        - os: linux
          env: NAME=py2_st-no_dep-yes
               PYTHON_VERSION=2.7
               ST_INSTALL=''
               DOCKER_INSTALL=''
               CONDA_DOWNLOAD=Miniconda-latest-Linux-x86_64.sh
               CONDA_DEPS='scipy matplotlib pytest pyyaml'

        # Python 2, SLAC ST 11-05-02, all other dependencies
        - os: linux
          sudo: required
          env: NAME=py2_slac-st-11-05-02
               PYTHON_VERSION=2.7
               ST_INSTALL=''
               DOCKER_INSTALL='bash dockerinstall.sh docker/centos6-11-05-02-python'
               CONDA_DOWNLOAD=Miniconda-latest-Linux-x86_64.sh
               CONDA_DEPS='scipy matplotlib pytest pyyaml'
               FERMI_DIR='/home'
               SLAC_ST_BUILD=true
        
              
#        # Python 3, no Fermi ST, only the required dependencies
#        # TODO: This isn't working yet, need to handle imports for opt deps more carefully
#        - os: linux
#          env: PYTHON_VERSION=3.5
#               ST_INSTALL=''
#               CONDA_DOWNLOAD=Miniconda3-latest-Linux-x86_64.sh
#               CONDA_DEPS=''
#               CONDA2=''

#before_install:
#  - cat Dockerfile
#  - $DOCKER_SETUP
#  - ls

# Setup anaconda and install packages
install:
  # Download and install the ST binaries
  - if [[ $DOCKER_INSTALL == '' ]]; then
        $ST_INSTALL; 
        source condainstall.sh;
    else
        $DOCKER_INSTALL;
        docker exec fermipy-testing /bin/bash --login -c "cd /home/fermipy && python setup.py install";
    fi

#docker exec fermipy-testing /bin/bash -c "cd /home/fermipy;source /home/fermipy/condainstall.sh";
  
#  - wget http://repo.continuum.io/miniconda/$CONDA_DOWNLOAD -O miniconda.sh
#  - bash miniconda.sh -b -p $HOME/miniconda
#  - export PATH="$HOME/miniconda/bin:$PATH"
#  - conda config --set always_yes yes --set changeps1 no
#  - conda update -q conda
#  - conda info -a
#  - conda create -q -n fermi-env python=$PYTHON_VERSION pip numpy astropy pytest $CONDA_DEPS
#  - source activate fermi-env
#  - python -m pip install coverage pytest-cov coveralls
#  - $CONDA2
#  - python setup.py install
#  - $ST_INSTALL 

# Run test
script:
  - if [[ $DOCKER_INSTALL == '' ]]; then
        bash travistests.sh;
    else
        docker exec fermipy-testing /bin/bash --login -c "cd /home/fermipy;/bin/bash /home/fermipy/travistests.sh";
    fi

after_success:
  - if [[ $NAME == 'main' ]]; then
        coveralls --rcfile='fermipy/tests/coveragerc';
    elif [[ $SLAC_ST_BUILD == 'true' ]]; then
        docker exec fermipy-testing /bin/bash --login -c "cd /home/fermipy;source condasetup.sh;coveralls --rcfile='fermipy/tests/coveragerc'";
    fi

#after_script:
#    - if [[ $DOCKER_INSTALL != '' ]]; then
#          echo stopping docker;
#          docker stop test0;
#          docker rm test0;
#      fi
